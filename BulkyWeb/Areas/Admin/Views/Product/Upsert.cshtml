@* Tại method Create không truyền gì vào View 
   Thì Model ở đây sẽ là 1 object của class Product và nó rỗng
@model Product *@
@model ProductVM

<div class="card shadow border-0 my-4">
    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2"> @(Model.Product.Id != 0 ? "Update" : "Create") Product</h2>
            </div>
        </div>
    </div>
    <div class="card-body p-4">
        @* enctype="multipart/form-data" dùng để xác định cách thức mã hóa dữ liệu khi form được gửi lên server
        multipart/form-data được sử dụng khi form cần gửi dữ liệu không chỉ là văn bản, như các tệp tin (ví dụ: hình ảnh, video, file)
        *@
        <form method="post" class="row" enctype="multipart/form-data">
            @* Phải có thẻ input này thì khi UPDATE, giá trị của Id, ImageUrl mới được gán *@
            <input asp-for="Product.Id" hidden />
            <input asp-for="Product.ImageUrl" hidden />

            <div class="row">
                <div class="col-10">
                    <div class="border p-3">
                        @*
                        Với giá trị là "All" nó sẽ hiển thị bản tóm tắt các lỗi với từng trường
                        Giá trị ModelOnly chỉ hiện thị bản tóm tắt các lỗi vi phạm ở trong Model - Controller
                        <div asp-validation-summary="ModelOnly"></div>*@

                        @*
                        asp-for="Title" biến Title ở đây là trường Title trong obj của class Product
                        asp-validation-for="Title" là xác thực cho biến Title theo data annotations
                        *@
                        <div class="py-2 col-12">
                            <input asp-for="Product.Title" class="form-control border-0 shadow" />
                            <label asp-for="Product.Title" class="ms-2"></label>
                            <span asp-validation-for="Product.Title" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <label asp-for="Product.Description" class="ms-2 text-muted"></label>
                            <textarea asp-for="Product.Description" class="form-control border-0 shadow"></textarea>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <input asp-for="Product.ISBN" class="form-control border-0 shadow" />
                            <label asp-for="Product.ISBN" class="ms-2"></label>
                            <span asp-validation-for="Product.ISBN" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <input asp-for="Product.Author" class="form-control border-0 shadow" />
                            <label asp-for="Product.Author" class="ms-2"></label>
                            <span asp-validation-for="Product.Author" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <input asp-for="Product.ListPrice" class="form-control border-0 shadow" />
                            <label asp-for="Product.ListPrice" class="ms-2"></label>
                            <span asp-validation-for="Product.ListPrice" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <input asp-for="Product.Price" class="form-control border-0 shadow" />
                            <label asp-for="Product.Price" class="ms-2"></label>
                            <span asp-validation-for="Product.Price" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <input asp-for="Product.Price50" class="form-control border-0 shadow" />
                            <label asp-for="Product.Price50" class="ms-2"></label>
                            <span asp-validation-for="Product.Price50" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <input asp-for="Product.Price100" class="form-control border-0 shadow" />
                            <label asp-for="Product.Price100" class="ms-2"></label>
                            <span asp-validation-for="Product.Price100" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            @* <select asp-for="CategoryId" asp-items="ViewBag.CategoryList" class="form-select border-0 shadow">
                            <option disabled selected>--Select Category--</option>
                            </select> *@
                            @* <select asp-for="Product.CategoryId" asp-items="@(ViewData["CategoryList"] as IEnumerable<SelectListItem>)" class="form-select border-0 shadow">
                            <option disabled selected>--Select Category--</option>
                            </select> *@
                            <select asp-for="@Model.Product.CategoryId" asp-items="@Model.CategoryList" class="form-select border-0 shadow">
                                <option disabled selected>--Select Category--</option>
                            </select>
                            <label asp-for="Product.CategoryId" class="ms-2"></label>
                            <span asp-validation-for="Product.CategoryId" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <input type="file" name="file" class="form-control border-0 shadow" />
                            <label asp-for="Product.ImageUrl" class="ms-2"></label>
                        </div>

                        <div class="row pt-2">
                            <div class="col-6 col-md-3">
                                @if (Model.Product.Id != 0)
                                {
                                    <button type="submit" class="btn btn-primary form-control">Update</button>
                                }
                                else
                                {
                                    <button type="submit" class="btn btn-primary form-control">Create</button>
                                }
                            </div>
                            <div class="col-6 col-md-3">
                                <a asp-controller="Product" asp-action="Index" class="btn btn-outline-primary border form-control">
                                    Back to list
                                </a>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="col-2">
                    <img src="@Model.Product.ImageUrl" width="100%" 
                         style="border-radius:5px; border:1px solid #bbb9b9"/>
                </div>
            </div>
        </form>
    </div>
</div>



@* Client Side Validation 
Nếu không sử dụng nó thì mỗi lần nhấn Create thì nó đều load lại trang 1 lần 
Nên sử dụng nó để không phải load lại trang *@ 
@section Scripts {
    <script>
        tinymce.init({
            selector: 'textarea',
            plugins: [
                // Core editing features
                'anchor', 'autolink', 'charmap', 'codesample', 'emoticons', 'lists', 'table', 'visualblocks', 'wordcount',
                // Your account includes a free trial of TinyMCE premium features
                // Try the most popular premium features until Oct 19, 2024:
                'checklist', 'mediaembed', 'casechange', 'export', 'formatpainter', 'pageembed', 'a11ychecker', 'tinymcespellchecker', 'permanentpen', 'powerpaste', 'advtable', 'advcode', 'editimage', 'advtemplate', 'ai', 'mentions', 'tinycomments', 'tableofcontents', 'footnotes', 'mergetags', 'autocorrect', 'typography', 'inlinecss', 'markdown',
            ],
            toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent ',
            tinycomments_mode: 'embedded',
            tinycomments_author: 'Author name',
            mergetags_list: [
                { value: 'First.Name', title: 'First Name' },
                { value: 'Email', title: 'Email' },
            ],
            ai_request: (request, respondWith) => respondWith.string(() => Promise.reject('See docs to implement AI Assistant')),
        });
    </script>
    @{
        <partial Title="_ValidationScriptsPartial" />
    }
}